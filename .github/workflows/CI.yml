name: CI

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

jobs:
  tests:
    name: Test ${{ matrix.module }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ server, client ]
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOVERSION }}
          cache-dependency-path: |
            go.sum

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          working-directory: ${{ matrix.module }}
          args: --timeout=10m

      - name: Run Tests
        run: go test -race -coverprofile=coverage.txt ./...

      - name: Upload coverage results
        uses: codecov/codecov-action@v5
        with:
          name: fops-tunnel-${{ matrix.module }}
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-push-docker:
    name: Build and Push Docker Image
    needs: tests
#    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: 'server'
          - image: 'client'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./${{ matrix.image }}/Dockerfile
          failure-threshold: error

      - name: Log in to the Container registry
        uses: docker/login-action@7ca345011ac4304463197fac0e56eab1bc7e6af0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Image Version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "IMAGE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "IMAGE_VERSION=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          fi

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.image }}
          tags: |
            type=raw,value=${{ env.IMAGE_VERSION }}
            type=raw,value=latest

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
        with:
          context: ./${{ matrix.image }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push Docker image
        id: push
        if: success()
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
        with:
          context: ./${{ matrix.image }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-${{ matrix.image }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
